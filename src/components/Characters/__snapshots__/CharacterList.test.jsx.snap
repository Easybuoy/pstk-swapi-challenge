// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CharacterList /> renders the CharacterList component correctly 1`] = `
<CharacterList
  characters={
    Array [
      Object {
        "gender": "male",
        "height": "300",
        "name": "Eze",
      },
    ]
  }
  loading={true}
  movie={
    Object {
      "characters": Array [
        "https://swapi.co/api/people/1/",
        "https://swapi.co/api/people/2/",
        "https://swapi.co/api/people/3/",
        "https://swapi.co/api/people/4/",
        "https://swapi.co/api/people/5/",
        "https://swapi.co/api/people/10/",
        "https://swapi.co/api/people/13/",
        "https://swapi.co/api/people/14/",
        "https://swapi.co/api/people/18/",
        "https://swapi.co/api/people/20/",
        "https://swapi.co/api/people/21/",
        "https://swapi.co/api/people/22/",
        "https://swapi.co/api/people/23/",
        "https://swapi.co/api/people/24/",
        "https://swapi.co/api/people/25/",
        "https://swapi.co/api/people/26/",
      ],
      "created": "2014-12-12T11:26:24.656000Z",
      "director": "Irvin Kershner",
      "edited": "2017-04-19T10:57:29.544256Z",
      "episode_id": 5,
      "opening_crawl": "It is a dark time for the
Rebellion. Although the Death
Star has been destroyed,
Imperial troops have driven the
Rebel forces from their hidden
base and pursued them across
the galaxy.

Evading the dreaded Imperial
Starfleet, a group of freedom
fighters led by Luke Skywalker
has established a new secret
base on the remote ice world
of Hoth.

The evil lord Darth Vader,
obsessed with finding young
Skywalker, has dispatched
thousands of remote probes into
the far reaches of space....",
      "planets": Array [
        "https://swapi.co/api/planets/4/",
        "https://swapi.co/api/planets/5/",
        "https://swapi.co/api/planets/6/",
        "https://swapi.co/api/planets/27/",
      ],
      "producer": "Gary Kurtz, Rick McCallum",
      "release_date": "1980-05-17",
      "species": Array [
        "https://swapi.co/api/species/6/",
        "https://swapi.co/api/species/7/",
        "https://swapi.co/api/species/3/",
        "https://swapi.co/api/species/2/",
        "https://swapi.co/api/species/1/",
      ],
      "starships": Array [
        "https://swapi.co/api/starships/15/",
        "https://swapi.co/api/starships/10/",
        "https://swapi.co/api/starships/11/",
        "https://swapi.co/api/starships/12/",
        "https://swapi.co/api/starships/21/",
        "https://swapi.co/api/starships/22/",
        "https://swapi.co/api/starships/23/",
        "https://swapi.co/api/starships/3/",
        "https://swapi.co/api/starships/17/",
      ],
      "title": "The Empire Strikes Back",
      "url": "https://swapi.co/api/films/2/",
      "vehicles": Array [
        "https://swapi.co/api/vehicles/8/",
        "https://swapi.co/api/vehicles/14/",
        "https://swapi.co/api/vehicles/16/",
        "https://swapi.co/api/vehicles/18/",
        "https://swapi.co/api/vehicles/19/",
        "https://swapi.co/api/vehicles/20/",
      ],
    }
  }
>
  <PreLoader>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ifAKCX",
              "isStatic": false,
              "lastClassName": "wUDoL",
              "rules": Array [
                "
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  text-align: center;
  margin: 5rem 0;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ifAKCX",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-ifAKCX wUDoL"
        >
          <n
            color="#f7e523"
            size={15}
          >
            <div
              className="PreLoading-Pulse"
            >
              <span
                className="Pulse-circle"
                style={
                  Object {
                    "background": "#f7e523",
                    "height": 15,
                    "margin": 7.5,
                    "width": 15,
                  }
                }
              />
              <span
                className="Pulse-circle"
                style={
                  Object {
                    "background": "#f7e523",
                    "height": 15,
                    "margin": 7.5,
                    "width": 15,
                  }
                }
              />
              <span
                className="Pulse-circle"
                style={
                  Object {
                    "background": "#f7e523",
                    "height": 15,
                    "margin": 7.5,
                    "width": 15,
                  }
                }
              />
            </div>
          </n>
        </div>
      </StyledComponent>
    </styled.div>
  </PreLoader>
</CharacterList>
`;

exports[`<CharacterList /> renders the CharacterList component correctly 2`] = `
<CharacterList
  movie={
    Object {
      "characters": Array [
        Object {
          "name": "Ezekiel",
        },
      ],
      "name": "Hi",
    }
  }
  selectedMovie=""
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "kpmQHN",
            "rules": Array [
              "
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  @media (max-width: 800px) {
    img {
      width: 600px;
    }
  }

  @media (max-width: 650px) {
    img {
      width: 500px;
    }
  }

  @media (max-width: 550px) {
    img {
      width: 400px;
    }
  }

  @media (max-width: 430px) {
    img {
      display: none;
    }
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat kpmQHN"
      >
        <img
          alt="Star Wars"
          src="star-wars.png"
        />
      </div>
    </StyledComponent>
  </styled.div>
</CharacterList>
`;

exports[`<CharacterList /> renders the CharacterList component correctly 3`] = `
<CharacterList
  movie={Object {}}
  selectedMovie=""
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "kpmQHN",
            "rules": Array [
              "
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  @media (max-width: 800px) {
    img {
      width: 600px;
    }
  }

  @media (max-width: 650px) {
    img {
      width: 500px;
    }
  }

  @media (max-width: 550px) {
    img {
      width: 400px;
    }
  }

  @media (max-width: 430px) {
    img {
      display: none;
    }
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat kpmQHN"
      >
        <img
          alt="Star Wars"
          src="star-wars.png"
        />
      </div>
    </StyledComponent>
  </styled.div>
</CharacterList>
`;
